
import { ColorValue, ImageSourcePropType, StyleProp, ViewStyle } from "react-native"
import Svg, { Circle, Defs, LinearGradient, Path, Polygon, RadialGradient, Rect, Stop } from "react-native-svg";
import { ReactNode } from "react";
import { ColorTheme } from "..";
import Animated, { AnimatedStyle } from "react-native-reanimated";

type SvgCircleProps = {
    cx: string | number,
    cy: string | number,
    r: string | number,
}

export type ShapeData<T> = {
    polygonPoints?: string;
    path?: string;
    circle?: SvgCircleProps;
    fill: T
}

export type DualFacedCard = {
    front: ImageSourcePropType,
    back: ImageSourcePropType
}

export type ImageReducerState = {
    iconImage?: ImageSourcePropType;
    cardImage?: ImageSourcePropType | DualFacedCard;
    Svg?: ReactNode
}

export type imageAction = {
    card: string;
    colorTheme?: ColorTheme;
    dungeonCompleted?: boolean;
    scale?: StyleProp<AnimatedStyle<StyleProp<ViewStyle>>>;
    svgDimension?: { width?: number | string, height?: number | string};
    fills?: [ColorValue, ...ColorValue[]]//syntax for first item has to be a string (can't be 0) to any amount of strings
}

const AnimatedSvg = Animated.createAnimatedComponent(Svg)
/*
fill boolean refers to theme reducer choices in App.
get device dimensions and change viewboxes depending on device width? (phone v. tablet)?
*/
export const imageReducer = (state: ImageReducerState, action: imageAction) => {
    switch (action.card) {
        case "the ring": {
            return {
                cardImage: {
                    front: require('../assets/cards/the_ring.jpg'),
                    back: require('../assets/cards/ring_tempt.jpg')
                },
                Svg: <Svg viewBox='0 0 32 32'
                {...action.svgDimension}
                >
                    <Defs>
                        <LinearGradient gradientUnits='userSpaceOnUse'
                            x1="16.029" y1="3.987" x2="16.029" y2="28.102"
                            id="gradient-0"
                        >
                            <Stop offset={0} stopColor={"rgba(225, 189, 6, 1)"} />
                            <Stop offset={1} stopColor={"rgba(126, 105, 3, 1)"} />
                        </LinearGradient>
                        <LinearGradient gradientUnits="userSpaceOnUse"
                            x1="16.861" y1="8.044" x2="16.861" y2="26.096"
                            id="gradient-1"
                        >
                            <Stop offset={0} stopColor={"rgba(225, 189, 6, 1)"} />
                            <Stop offset={1} stopColor={"rgba(126, 105, 3, 1)"} />
                        </LinearGradient>
                        <LinearGradient gradientUnits="userSpaceOnUse"
                            x1="16.029" y1="3.987" x2="16.029" y2="28.102"
                            id="gradient-2"
                            gradientTransform={"matrix(0.75253, 0.658558, -0.80918, 0.924644, 18.325373, -9.752842)"}
                        >
                            <Stop offset={0} stopColor={"rgb(250, 239, 126)"} />
                            <Stop offset={1} stopColor={"rgb(207, 130, 5)"} />
                        </LinearGradient>
                        <LinearGradient gradientUnits="userSpaceOnUse"
                            x1="14.117" y1="5.801" x2="14.117" y2="22.048"
                            id="gradient-3"
                            gradientTransform={"matrix(0.753408, 0.657553, -0.963804, 1.104301, 17.136967, -10.766379)"}
                        >
                            <Stop offset={0} stopColor={"rgb(207, 130, 5)"} />
                            <Stop offset={1} stopColor={"rgb(250, 239, 126)"} />
                        </LinearGradient>
                    </Defs>
                    <Path d='M 26 7 L 25.699 6.699 C 24 4.801 21.5 4.199 21.5 4.199 C 18.5 3.301 13.801 5.301 9.602 9.398 C 6.102 12.699 4 16.699 4 19.699 C 4 20.102 4.102 20.5 4.102 20.898 C 4.301 22.898 5.602 25 6.699 26 C 8.102 27.398 9.898 28.102 11.898 28.102 C 15.199 28.102 19.102 26.199 22.699 22.801 C 28.301 17.301 29.699 10.801 26 7 Z M 10 21.699 C 10 20.398 11.398 17.699 14.398 14.699 C 17.301 11.801 20.301 11 21.699 10.699 C 21 12.602 19.5 14.898 17.301 17.102 C 15.199 19.102 12.801 20.699 10.699 21.5 C 10.5 21.602 10.199 21.602 10 21.699 Z M 11 10.801 C 14.301 7.5 17.801 5.898 20 5.898 C 20.699 5.898 21.301 6.102 21.699 6.5 C 22.102 6.898 22.301 7.699 22.199 8.602 C 21 8.699 16.898 9.398 13 13.301 C 10.5 15.801 7.898 19.398 8.102 21.898 C 7.5 21.898 6.898 21.699 6.602 21.398 C 6.398 21.199 6.199 20.898 6.102 20.5 C 6.102 20.5 6 20 6 19.699 C 6.102 17.199 8 13.699 11 10.801 Z M 21.301 21.301 C 16.5 26.102 11 27.398 8.102 24.602 C 7.898 24.398 7.699 24.199 7.5 23.898 C 7.699 24 8 24 8.301 24 C 9.199 24 10.301 23.801 11.398 23.398 C 13.801 22.5 16.398 20.801 18.699 18.5 C 22.199 15 24.199 11 24.199 8.102 L 24.602 8.398 C 27.398 11.301 26 16.699 21.301 21.301 Z'
                        stroke={"url(#gradient-0)"}
                        fill={"rgb(6, 6, 6)"}
                        strokeWidth={0}
                    />
                    <Path d='M 24.597 8.271 C 24.779 8.076 29.45 13.256 21.391 21.227 C 20.24 22.68 12.483 29.159 8.112 24.66 L 7.464 23.948 L 8.403 23.947 C 8.291 24.081 11.212 23.627 11.513 23.266 C 11.491 23.601 18.461 19.343 18.638 18.44 C 20.347 17.432 24.671 10.132 24.177 7.947 L 24.597 8.271 Z'
                        strokeWidth={0}
                        stroke={"url(#gradient-1)"}
                        fill={"url(#gradient-2)"}
                    />
                    <Path d='M 8.216 21.989 C 8.216 22.248 6.585 21.579 6.585 21.425 C 6.563 21.447 6.025 20.573 6.083 20.515 C 5.957 20.599 5.726 19.716 5.852 19.632 C 6.265 15.792 10.016 11.525 10.908 10.685 C 11.164 10.073 17.666 5.137 19.984 5.84 C 20.556 5.82 22.183 6.374 21.808 6.436 C 22.657 6.379 22.604 8.58 22.243 8.698 C 20.078 8.342 14.176 12.044 13.037 13.306 C 8.591 18.235 7.8 21.191 8.216 21.989 Z'
                        stroke={"rgb(0, 0, 0)"}
                        strokeWidth={0}
                        fill={"url(#gradient-3)"}
                    />
                </Svg>
            }
        };
        case "speed": {
            return {
                cardImage: {
                    front: require('../assets/cards/startspeed.jpg'),
                    back: require('../assets/cards/maxspeed.jpg')
                },
                Svg: <Svg 
                {...action.svgDimension}
                viewBox="0 0 400 400"
                >
                    <Path d="M54.7 198.7c-24 62.6-44 114.6-44.3 115.5-.6 1.7.9 1.8 22.8 1.8h23.4l6.9-19 7-19h121.6l-.7 2.2c-.4 1.3-3.5 9.7-6.9 18.8l-6.2 16.5 70.6.5c46.3.3 71 .2 71.8-.5.9-.8 73.3-192.2 73.3-194 0-.3-29.2-.5-65-.5-35.7 0-65-.3-65-.6 0-.6 5-14.5 10.4-28.7L277 85H98.4L54.7 198.7zM125 97.2c0 .2-17.3 46.6-38.4 103.3l-38.4 103-10.7.3c-5.9.1-10.4-.1-10.2-.5.3-.4 18.1-46.7 39.7-102.8 21.6-56.1 39.4-102.3 39.7-102.8.4-.6 18.3-1.1 18.3-.5zm134 .6c0 .7-15.4 42.7-18.5 50.4-.7 1.7-3.1 1.8-30.6 1.8-16.4 0-29.9-.4-29.9-.8 0-.5 4.1-11.8 9-25.3 5-13.4 9.3-25 9.5-25.7.3-.9 7.3-1.2 30.5-1.2 16.5 0 30 .4 30 .8zm118 35.4c0 .2-4.4 12-9.8 26.3l-9.8 26-29.1.3-29.1.2 4.7-12.2c2.6-6.8 7.2-18.7 10.2-26.5l5.4-14.3h28.8c15.8 0 28.7.1 28.7.2zm-201 19.5c0 .5-4.5 12.9-10 27.7-5.5 14.8-10 27.1-10 27.3 0 .2-13.3.3-29.6.3-18.1 0-29.4-.4-29.2-.9.2-.6 4.8-13.2 10.3-28l10-27.1h29.3c16 0 29.2.3 29.2.7zm119.6 37c-.4 1-5.5 14.3-11.4 29.5L273.5 247h-28.4c-22.2 0-28.2-.3-27.9-1.3.3-.6 5.2-13.9 10.9-29.4l10.4-28.3h28.9c27 0 28.8.1 28.2 1.7zm-78.6 21c0 .5-4.5 13.1-10.1 28L196.8 266h-29.9c-16.4 0-29.9-.4-29.9-.8 0-.7 16-44.5 19.1-52.5l1.1-2.7h29.9c16.5 0 29.9.3 29.9.7zm116 39c0 .5-4.2 11.7-18.2 49l-1.9 5.3h-29.5c-16.2 0-29.4-.2-29.4-.5s15.8-41.5 20.1-52.3l.9-2.2h29c15.9 0 29 .3 29 .7z"
                        fill={action.colorTheme ? action.colorTheme.primary : "white"}
                        >
                    </Path>
                </Svg>
            }
        }
        case "dungeon":
            return {
                Svg: <Svg viewBox='0 0 524 524'
                    {...action.svgDimension}
                    style={{
                        marginLeft: action.dungeonCompleted ? 0 : 10,
                    }}>
                    <Path d="M128.73 195.32l-82.81-51.76c-8.04-5.02-18.99-2.17-22.93 6.45A254.19 254.19 0 0 0 .54 239.28C-.05 248.37 7.59 256 16.69 256h97.13c7.96 0 14.08-6.25 15.01-14.16 1.09-9.33 3.24-18.33 6.24-26.94 2.56-7.34.25-15.46-6.34-19.58zM319.03 8C298.86 2.82 277.77 0 256 0s-42.86 2.82-63.03 8c-9.17 2.35-13.91 12.6-10.39 21.39l37.47 104.03A16.003 16.003 0 0 0 235.1 144h41.8c6.75 0 12.77-4.23 15.05-10.58l37.47-104.03c3.52-8.79-1.22-19.03-10.39-21.39zM112 288H16c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm0 128H16c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm77.31-283.67l-36.32-90.8c-3.53-8.83-14.13-12.99-22.42-8.31a257.308 257.308 0 0 0-71.61 59.89c-6.06 7.32-3.85 18.48 4.22 23.52l82.93 51.83c6.51 4.07 14.66 2.62 20.11-2.79 5.18-5.15 10.79-9.85 16.79-14.05 6.28-4.41 9.15-12.17 6.3-19.29zM398.18 256h97.13c9.1 0 16.74-7.63 16.15-16.72a254.135 254.135 0 0 0-22.45-89.27c-3.94-8.62-14.89-11.47-22.93-6.45l-82.81 51.76c-6.59 4.12-8.9 12.24-6.34 19.58 3.01 8.61 5.15 17.62 6.24 26.94.93 7.91 7.05 14.16 15.01 14.16zm54.85-162.89a257.308 257.308 0 0 0-71.61-59.89c-8.28-4.68-18.88-.52-22.42 8.31l-36.32 90.8c-2.85 7.12.02 14.88 6.3 19.28 6 4.2 11.61 8.9 16.79 14.05 5.44 5.41 13.6 6.86 20.11 2.79l82.93-51.83c8.07-5.03 10.29-16.19 4.22-23.51zM496 288h-96c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm0 128h-96c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zM240 177.62V472c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8V177.62c-5.23-.89-10.52-1.62-16-1.62s-10.77.73-16 1.62zm-64 41.51V472c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8V189.36c-12.78 7.45-23.84 17.47-32 29.77zm128-29.77V472c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8V219.13c-8.16-12.3-19.22-22.32-32-29.77z"
                        fill={
                            action.dungeonCompleted ?
                                (action.colorTheme?.primary === 'rgba(0,0,0,1)' ? 'white' : 'rgba(0,0,0,1)')
                                :
                                action.colorTheme?.secondary
                        }
                    />
                </Svg>
            };
        case "blessing":
            return {
                cardImage: require('../assets/cards/citys-blessing.png')
            };
        case "initiative":
            return {
                cardImage: require('../assets/cards/initiative.jpg'),
                Svg: <AnimatedSvg viewBox="0 0 375 500"
                    // style={action.scale}
                    {...action.svgDimension}
                >
                    <Path
                        fill={action.fills?.[0] ?? "#FFFFFF"}
                        d="M187.217,56.432c43.305,0,59.067-49.353,59.067-49.353l118.389,93.202c0,0-7.54,178.814-7.775,185.494   c-0.561,15.715-7.097,30.464-11.282,40.731c-15.108,36.943-72.238,116.75-148.229,165.572h-20.337   c-75.991-48.822-133.12-128.629-148.22-165.572c-4.196-10.269-10.737-25.019-11.287-40.731   c-0.237-6.68-7.777-185.494-7.777-185.494L128.15,7.079C128.15,7.079,143.908,56.432,187.217,56.432z" />
                    <LinearGradient id='SVGID_1_'
                        gradientUnits="userSpaceOnUse"
                        gradientTransform={"matrix(1 0 0 -1 0 501)"}
                        x1={26.2568} y1={247.0918} x2={348.1709} y2={247.0918} >
                        <Stop offset={0} stopColor={"#626E77"} />
                        <Stop offset={0.0069} stopColor={"#647079"} />
                        <Stop offset={0.1352} stopColor={"#8496A1"} />
                        <Stop offset={0.2374} stopColor={"#99ADB9"} />
                        <Stop offset={0.3} stopColor={"#A0B6C2"} />
                        <Stop offset={0.3027} stopColor={"#A1B7C3"} />
                        <Stop offset={0.3597} stopColor={"#ADC6D4"} />
                        <Stop offset={0.4222} stopColor={"#B5CEDE"} />
                        <Stop offset={0.5} stopColor={"#B7D1E1"} />
                        <Stop offset={0.5778} stopColor={"#B5CEDE"} />
                        <Stop offset={0.6403} stopColor={"#ADC6D4"} />
                        <Stop offset={0.6973} stopColor={"#A1B7C3"} />
                        <Stop offset={0.7} stopColor={"#A0B6C2"} />
                        <Stop offset={0.7626} stopColor={"#99ADB9"} />
                        <Stop offset={0.8648} stopColor={"#8496A1"} />
                        <Stop offset={0.9931} stopColor={"#647079"} />
                        <Stop offset={1} stopColor={"#626E77"} />
                    </LinearGradient>
                    <Path
                        fill={action.fills?.[1] ?? "#FFFFFF"}
                        d="M181.832,476.496C94.47,417.264,43.611,329.907,40.619,312.555   c-1.995-11.566-1.199-21.74,2.396-30.521c8.374,26.324,24.728,56.249,49.063,89.754c26.041,34.727,51.887,59.109,77.539,73.138   h35.199c25.647-14.028,51.498-38.411,77.539-73.138c24.336-33.505,40.694-63.43,49.067-89.754l0,0   c3.581,8.781,4.387,18.955,2.388,30.521c-2.992,17.354-53.853,104.709-141.209,163.941H181.832L181.832,476.496z M187.217,78.588   l-14.958,44.285l-52.658,31.108l-46.672-11.964l32.311,37.104v62.226l-32.311,37.105l47.269-12.58l51.46,31.715l15.559,49.067   l15.559-49.067l51.466-31.715l47.269,12.58l-32.32-37.105v-62.226l32.32-37.104l-46.682,11.964l-52.653-31.108L187.217,78.588   L187.217,78.588z M26.257,127.06c37.517,50.944,39.847,96.612,6.991,136.995l-1.009,1.221L26.257,127.06z M348.171,127.06   l-5.986,138.215l-1.005-1.221C308.33,223.671,310.66,178.004,348.171,127.06L348.171,127.06z M174.05,430.422   c-56.642-39.084-97.133-93.939-121.463-164.55c31.596-43.83,24.089-96.659-22.512-158.478l-1.425-1.875l93.945-74.199   c13.428,27.65,34.675,41.215,63.737,40.704l0.886-0.009l0.886,0.009c29.063,0.512,50.31-13.053,63.732-40.704l93.95,74.199   l-1.421,1.875c-46.605,61.818-54.108,114.647-22.518,158.478c-24.336,70.608-64.82,125.466-121.464,164.55H174.05L174.05,430.422z"
                    />
                    <Polygon
                        fill={"#FFFFFF"}
                        points="123.789,246.728 123.789,173.135 187.217,134.837 250.641,173.135 250.641,246.728    187.217,285.623  " />
                </AnimatedSvg>
            };
        case "monarch":
            return {
                cardImage: require('../assets/cards/monarch.jpg'),
                Svg: <AnimatedSvg viewBox='0 0 512 512' fill={action.fills?.[0] ?? "#FFFFFF"}
                    style={action.scale}
                    {...action.svgDimension}
                >
                    <Defs>
                        <RadialGradient gradientUnits="userSpaceOnUse" cx="254.484" cy="367.256" r="226.878" id="gradient-0">
                            <Stop offset={0} stopColor="rgb(88, 0, 0)" />
                            <Stop offset={1} stopColor="rgb(215, 3, 3)" />
                        </RadialGradient>
                    </Defs>
                    <Path d='M124.536,178.991c12.892,0,23.33-10.438,23.33-23.322s-10.438-23.322-23.33-23.322   c-12.876,0-23.314,10.438-23.314,23.322S111.66,178.991,124.536,178.991z' />
                    <Path d='M46.66,211.508c0-12.883-10.454-23.321-23.33-23.321C10.454,188.187,0,198.625,0,211.508   c0,12.884,10.454,23.322,23.33,23.322C36.206,234.83,46.66,224.392,46.66,211.508z' />
                    <Path d='M387.464,178.991c12.892,0,23.33-10.438,23.33-23.322s-10.438-23.322-23.33-23.322   c-12.876,0-23.314,10.438-23.314,23.322S374.588,178.991,387.464,178.991z' />
                    <Path d="M488.686,188.187c-12.892,0-23.33,10.438-23.33,23.321c0,12.884,10.438,23.322,23.33,23.322   c12.876,0,23.314-10.438,23.314-23.322C512,198.625,501.562,188.187,488.686,188.187z" />
                    <Rect x="80.101" y="399.236" width="351.815" height="36.296"
                        fill={action.fills?.[1] ?? "#FFFFFF"}
                    />
                    <Path d='M400.193,272.999c-33.932-23.322-14.839-82.694-14.839-82.694l-19.388-5.661   c-40.721,77.385-100.608,73.761-95.937-12.728v-27.715h33.686v-28.05h-33.686V76.468h-28.058v39.682h-33.702v28.05h33.702v27.715   c4.679,86.49-55.2,90.113-95.938,12.728l-19.371,5.661c0,0,19.076,59.372-14.839,82.694   c-33.932,23.321-63.626-33.923-63.626-33.923l-19.076,8.474L82.13,374.777H429.87l53.008-127.226l-19.076-8.474   C463.802,239.076,434.125,296.32,400.193,272.999z M170.852,321.058c-9.26,0-16.77-7.501-16.77-16.762   c0-9.252,7.51-16.753,16.77-16.753c9.244,0,16.753,7.501,16.753,16.753C187.606,313.557,180.096,321.058,170.852,321.058z    M256.008,312.681c-9.26,0-16.762-7.501-16.762-16.762c0-9.252,7.501-16.753,16.762-16.753c9.252,0,16.753,7.501,16.753,16.753   C272.762,305.18,265.26,312.681,256.008,312.681z M341.164,321.058c-9.26,0-16.753-7.501-16.753-16.762   c0-9.252,7.493-16.753,16.753-16.753c9.26,0,16.753,7.501,16.753,16.753C357.918,313.557,350.425,321.058,341.164,321.058z'
                        fill={action.fills?.[2] ?? "#FFFFFF"}
                        stroke={'black'}
                    />
                </AnimatedSvg>
            };
        case 'storm': {
            return {
                cardImage: require('../assets/cards/storm.png'),
                Svg: <Svg viewBox='-25 0 600 600'>
                    <Path fill={action.fills ? action.fills[0] : 'white'} d="M375.771,103.226c1.137-5.199,1.736-10.559,1.736-16.04c0-47.913-45.389-86.754-101.377-86.754    c-39.921,0-74.447,19.749-90.979,48.451c-3.419-0.298-6.888-0.451-10.398-0.451c-41.397,0-76.993,21.236-92.738,51.671    C35.289,107.836,0,143.023,0,185.27c0,47.913,45.388,86.754,101.377,86.754h241.377c55.988,0,101.377-38.841,101.377-86.754    C444.131,147.25,415.551,114.945,375.771,103.226z" />
                    <Polygon fill={action.fills ? action.fills[0] : 'white'} points="289.232,280.023 203.678,371.373 279.623,371.373 239.523,443.699 327.887,347.631 251.941,347.631 " />
                    <Polygon fill={action.fills ? action.fills[0] : 'white'} points="168.739,294.847 116.246,350.895 162.842,350.895 138.239,395.271 192.454,336.326 145.858,336.326   " />
                </Svg>
            }
        };
        case "rads": {
            return {
                cardImage: require('../assets/cards/radiation.webp'),
                Svg: <Svg viewBox="0 0 1800 1800">
                    <Path d="M820 1788 c-35 -5 -66 -10 -67 -12 -3 -3 59 -335 97 -520 11 -55 17 -103 13 -107 -5 -3 -24 -12 -45 -18 -54 -18 -122 -82 -147 -141 -12 -27 -28 -50 -35 -50 -8 0 -99 20 -202 45 -104 25 -238 57 -297 71 -60 14 -110 24 -111 22 -8 -8 -26 -166 -26 -222 0 -147 51 -329 127 -451 55 -87 97 -145 105 -142 4 1 94 86 200 188 262 252 266 255 286 241 86 -61 105 -67 195 -67 l87 1 20 -66 c10 -36 33 -114 50 -175 17 -60 52 -172 76 -248 52 -159 40 -153 173 -86 112 56 189 110 273 192 43 41 140 184 172 250 51 109 51 114 19 121 -15 4 -91 27 -168 51 -77 23 -201 62 -275 84 -192 59 -179 51 -173 105 9 73 -5 131 -43 186 l-35 51 237 235 c134 132 233 238 228 243 -127 110 -309 195 -462 216 -81 11 -200 12 -272 3z m191 -743 c74 -48 102 -129 75 -212 -20 -60 -66 -107 -126 -128 -76 -27 -146 -4 -203 68 -54 66 -48 182 12 237 79 72 167 85 242 35z"
                    fill={action.fills ? action.fills[0] : 'white'}
                    ></Path>
                </Svg>
            }
        }
        case 'tickets':
            return {
                cardImage: require('../assets/cards/ticket-bucket-bot.jpg'),
                Svg: <Svg viewBox="0 0 765 950">
                    <Path d="m 431.80106,942.32749 c -13.626,-2.70879 -79.97202,-26.21621 -88.80994,-31.46672 -15.23873,-9.05316 -26.53795,-21.52857 -33.91554,-37.44595 -5.44123,-11.73961 -7.19701,-19.92887 -7.6203,-35.54233 -0.2595,-9.57209 -0.9319,-15.40201 -2.31099,-20.0371 -7.38185,-24.81009 -36.40647,-37.09169 -60.39266,-25.55479 -7.64887,3.67896 -10.97064,6.804 -21.88817,20.59189 -9.35099,11.80948 -27.11561,22.94397 -43.23595,27.09938 -11.37142,2.93127 -29.13017,3.00085 -40,0.15674 C 116.5103,835.64986 62.473812,816.2963 54.754612,811.8797 35.759622,801.01161 23.226502,785.82 15.956282,764.85162 c -3.16074,-9.11606 -3.28743,-10.07281 -3.3077,-24.97913 l -0.0211,-15.5 11.14619,-32.5 C 92.368492,491.86422 241.7301,59.236012 243.58679,55.180469 c 9.46063,-20.664738 28.78499,-36.768011 52.24923,-43.540043 11.08947,-3.2005404 32.22877,-3.2274744 43.79149,-0.05579 12.47277,3.421309 67.36745,22.652746 73.49995,25.749502 20.4536,10.328417 35.9421,28.722152 42.9772,51.038355 1.6922,5.36804 2.3969,10.96333 3.0226,23.999997 0.8784,18.3008 1.84,22.45846 7.0842,30.63076 8.6831,13.53154 23.6211,20.78507 40.3891,19.61205 13.9344,-0.9748 23.5225,-6.60045 33.4285,-19.6135 9.1169,-11.9765 17.9092,-19.46862 29.5703,-25.19748 13.2419,-6.5055 19.5128,-8.07144 34.7077,-8.66697 16.7069,-0.6548 20.2823,0.19171 62.5778,14.81612 33.88,11.71461 44.9635,16.34685 52.7426,22.0434 11.7688,8.61803 23.7443,24.02234 28.9513,37.24055 4.4586,11.31829 5.7938,19.66827 5.306,33.18301 l -0.4347,12.04795 -10.5573,30.95205 c -40.4909,118.71222 -218.3383,633.99338 -220.3169,638.32895 -3.0907,6.7722 -9.8095,16.18913 -16.0275,22.46351 -18.3737,18.54047 -48.2551,27.38114 -74.7473,22.1146 z m 29.2811,-28.93034 c 14.0846,-3.74823 29.5002,-15.55498 35.285,-27.02466 1.387,-2.75 5.684,-14.225 9.549,-25.5 3.8649,-11.275 53.933,-156.625 111.2624,-323 57.3295,-166.375 105.0709,-305.41526 106.0922,-308.97836 5.5459,-19.35006 -0.4492,-40.49055 -15.5272,-54.75274 -3.9359,-3.72289 -9.3971,-7.96811 -12.1361,-9.43382 -5.4676,-2.92588 -71.6463,-26.09142 -77.8359,-27.24612 -6.3689,-1.18813 -19.7658,-0.73449 -25.901,0.87705 -13.2297,3.47507 -24.2459,11.55933 -34.327,25.19107 -13.0128,17.59597 -36.0559,28.34991 -57.9161,27.02879 -28.7417,-1.73702 -52.8701,-19.45399 -62.7532,-46.07828 -2.7149,-7.31386 -3.0876,-9.77189 -3.8067,-25.10759 -0.4384,-9.35 -1.3234,-18.8 -1.9667,-21.000001 -3.8339,-13.11177 -15.8149,-28.01235 -27.4734,-34.167997 -3.3,-1.7424 -20.625,-8.200018 -38.5,-14.350261 -29.83489,-10.265296 -33.25644,-11.226108 -41.72525,-11.716965 -17.97197,-1.041668 -31.76202,4.028663 -43.88365,16.135152 -3.90993,3.905041 -8.24727,9.350074 -9.63855,12.100074 -1.39127,2.75 -10.18858,27.274997 -19.54957,54.499998 -9.36099,27.225 -59.64141,173.25 -111.73425,324.5 -52.092848,151.25 -95.328668,277.25 -96.079608,280 -1.81836,6.65903 -1.75099,19.69031 0.13932,26.9477 3.69548,14.1879 14.91094,28.7966 27.04223,35.22388 8.11701,4.30046 68.263298,25.1008 76.371778,26.41158 10.64391,1.72065 24.95266,-0.80104 35.0576,-6.17835 7.72384,-4.11021 14.12317,-9.87103 20.99964,-18.90433 6.90517,-9.07102 12.0152,-13.69854 21.00036,-19.01745 13.09949,-7.75445 28.57093,-11.0456 42.65949,-9.07471 24.63084,3.44568 44.47088,17.37221 54.92439,38.55364 5.38955,10.9206 7.41612,20.59853 7.41612,35.41591 0,12.71699 1.65184,19.87566 6.79105,29.43082 4.57958,8.51465 14.77786,18.43531 23.45291,22.81446 5.82589,2.94089 68.06279,24.9872 75.75599,26.83521 5.7272,1.37572 21.084,1.12863 26.9547,-0.4337 z m -21.4547,-24.50018 c -5.4456,-1.18489 -65.1203,-21.83739 -69.5449,-24.06843 -4.516,-2.27712 -11.3816,-9.69957 -13.54036,-14.63855 -1.1667,-2.6693 -1.90325,-8.4795 -2.44884,-19.3175 -1.55931,-30.97543 -10.10464,-50.60208 -30.3342,-69.6706 -25.77843,-24.29892 -63.41613,-32.54093 -96.87327,-21.21359 -15.91458,5.38809 -32.47221,16.77277 -41.96236,28.85245 -8.02229,10.21131 -15.06708,16.59536 -20.26875,18.36775 -9.75075,3.32241 -13.65902,2.5941 -46.82089,-8.72516 -35.007948,-11.9494 -36.332448,-12.51153 -41.658798,-17.68058 -5.73926,-5.56976 -8.28149,-11.17115 -8.82156,-19.43687 -0.38652,-5.91572 0.0132,-8.4068 2.56715,-16 2.60414,-7.74233 116.826298,-339.59639 196.660398,-571.36506 17.08855,-49.61028 26.57819,-75.767601 28.50244,-78.564401 5.51428,-8.01473 16.95118,-13.231224 26.9324,-12.28416 6.63332,0.6294 63.94974,20.26327 70.69694,24.2174 4.6618,2.73195 9.4428,8.44491 12.1372,14.502821 1.0698,2.40533 1.7942,8.66057 2.3162,20 0.6138,13.33298 1.2606,18.18842 3.3695,25.29659 11.7784,39.69798 46.5273,66.3713 89.0917,68.387 32.3223,1.53068 61.8617,-12.9798 81.4551,-40.01267 7.1171,-9.81945 17.261,-14.51333 28.9134,-13.379 5.182,0.50447 63.869,20.11702 72.6143,24.26691 4.7814,2.26893 10.9762,8.4675 13.6415,13.64991 1.5147,2.94497 2.3327,6.64423 2.6074,11.79126 l 0.4004,7.5 -111.9723,325 c -61.5848,178.75 -112.458,326.24992 -113.0518,327.7776 -1.8089,4.65468 -9.8014,12.34422 -15.2801,14.70113 -5.8202,2.50377 -13.4913,3.31571 -19.3279,2.04575 z"
                    fill={action.fills ? action.fills[0] : 'white'}
                    ></Path>
                </Svg>
            };
        case 'acorn':
            return {
                cardImage: require('../assets/cards/acorn_stash.jpg'),
                Svg: <Svg viewBox="0 0 3200 3200">
                    <Path d="M2903 3223 c-10 -4 -95 -113 -128 -164 -58 -91 -95 -139 -140 -182 -50 -48 -115 -86 -115 -68 0 13 -95 34 -146 33 -24 -1 -55 -9 -70 -18 -17 -12 -44 -17 -82 -16 -61 0 -130 32 -256 115 -31 20 -60 37 -65 37 -4 0 -25 13 -46 30 -20 16 -60 41 -89 55 -28 15 -58 30 -66 35 -39 23 -136 61 -165 64 -18 2 -44 10 -57 17 -36 20 -202 19 -320 -1 -95 -16 -170 -46 -190 -75 -4 -5 -8 -6 -8 -2 0 11 -70 -43 -70 -54 0 -4 -14 -23 -31 -41 -37 -41 -68 -96 -92 -168 -19 -58 -34 -160 -23 -160 3 0 23 11 44 24 20 14 57 30 81 36 64 17 198 14 246 -5 22 -9 49 -19 60 -22 22 -7 165 -79 204 -103 357 -216 776 -600 1052 -965 96 -126 239 -344 239 -364 0 -8 13 -42 29 -75 69 -147 74 -249 16 -395 l-24 -61 24 0 c34 0 128 21 141 31 6 5 29 15 50 23 54 19 175 111 196 150 9 17 25 54 34 81 9 28 20 55 24 60 38 53 48 310 17 423 -21 78 -92 231 -155 332 -53 85 -67 102 -76 92 -4 -3 -4 0 -1 9 3 9 -13 43 -38 81 -24 37 -52 94 -62 127 -19 63 -19 58 16 213 12 53 11 62 -9 109 l-21 51 20 28 c11 15 44 45 72 66 29 21 77 59 109 84 31 25 70 55 86 68 38 29 45 56 21 78 -11 10 -33 42 -50 71 -17 29 -36 59 -43 66 -21 21 -77 145 -83 185 -10 64 -24 80 -60 65z"
                    fill={action.fills ? action.fills[0] : 'white'}
                    ></Path>
                    <Path d="M856 2583 c-123 -14 -441 -347 -581 -606 -134 -249 -201 -410 -221 -527 -38 -224 -39 -364 -4 -550 6 -36 14 -76 17 -90 5 -29 13 -60 47 -185 13 -49 27 -106 30 -125 3 -19 10 -53 16 -75 16 -66 12 -212 -6 -251 -9 -19 -14 -37 -12 -39 3 -3 24 2 48 10 41 14 199 23 217 12 4 -3 51 -12 103 -21 52 -9 142 -30 200 -47 136 -40 120 -37 305 -60 235 -30 356 -18 595 58 48 15 225 88 250 104 8 4 31 16 50 26 71 34 295 187 381 259 133 113 205 189 248 262 33 56 40 80 46 142 7 80 -8 169 -39 227 -9 18 -16 36 -16 42 0 5 -16 36 -36 68 -19 32 -40 67 -47 78 -36 59 -105 156 -139 195 -122 140 -181 203 -353 378 -301 305 -520 486 -730 602 -199 111 -252 127 -369 113z m209 -272 c10 -6 16 -7 38 -10 16 -2 99 -80 122 -114 24 -36 14 -47 -97 -102 -195 -97 -341 -213 -438 -350 -125 -175 -211 -317 -235 -385 -8 -25 -19 -54 -24 -65 -30 -63 -51 -120 -51 -135 0 -9 -3 -20 -7 -24 -10 -10 -33 -78 -33 -101 -1 -11 -7 -38 -15 -60 -17 -44 -38 -166 -36 -205 1 -14 -2 -20 -8 -15 -13 15 -41 105 -41 132 0 14 -5 33 -10 43 -11 20 -15 286 -5 330 3 14 12 59 20 100 7 41 16 82 19 90 3 8 7 27 10 41 2 15 16 51 30 81 14 30 26 58 26 61 0 13 74 164 109 222 164 274 346 453 481 475 45 8 126 3 145 -9z"
                    fill={action.fills ? action.fills[0] : 'white'}
                    ></Path>
                </Svg>
            };
        case 'energy':
            return {
                cardImage: require('../assets/cards/energy_reserve.jpg'),
                Svg: <Svg viewBox="0 0 100 100">
                    <Path d="M20.796 1c31.629 5.815 45.711 4.744 58.731 0 0 0 4.376 42.061 21.428 62.559 0 0-30.335 8.504-50.112 37.308 0 0-19.364-27.014-49.842-37.789 9.542-13.121 18.357-39.075 19.796-62.078z"
                    fill={action.fills ? action.fills[0] : 'white'}
                    ></Path>
                    <Path d="M38.272 10.497c-.211-1.696 6.723 4.506 26.444-.587 0 0-14.239 11.917-15.834 31.303 0 0 15.408 3.458 29.732-1.089 0 0-21.436 27.626-26.954 52.361 0 0-6.005-13.6.205-36.533 0 0-7.38-5.067-33.694 1.59 0 0 22.678-26.323 20.101-47.044z"
                    fill={action.fills ? action.fills[0] : 'white'}
                    ></Path>
                </Svg>
            };
        case 'exp':
            return {
                cardImage: require('../assets/cards/experience.jpg'),
                Svg: <Svg viewBox="0 0 1000 1000">
                    <Path d="M.775 171.102c96.217.111 192.488-.717 288.65.386 26.868 13.406 51.584 31.281 75.087 50.039-11.696 41.378-8.552 88.438 16.055 124.74 17.434 27.474 47.611 45.239 79.445 50.314l.055 497.248C351.107 834.08 244.959 767.49 151.445 685.175c-32.053-28.467-63.28-62.729-70.893-106.423-9.103-51.97 12.689-102.395 14.345-154.035.717-40.108-.111-81.541-16.331-118.946-15.227-40.494-46.783-71.224-70.065-106.865-6.014-8.054-7.503-17.985-7.724-27.805zm624.469 50.148c23.834-18.316 48.551-36.301 75.418-49.763 96.108-1.103 192.268-.275 288.43-.386-.719 8.219-.497 16.992-5.572 23.999-21.572 35.253-52.523 64.548-68.963 103.057-19.475 40.108-20.799 85.734-19.529 129.485 2.481 50.369 22.675 99.581 14.454 150.339-7.613 44.134-39.115 78.616-71.39 107.36-94.23 83.251-201.702 149.842-311.491 210.418-.055-166.337-.055-332.675-.055-499.012 35.75-4.359 69.403-25.378 86.837-57.156 20.965-35.418 22.731-79.334 11.861-118.34z"
                    fill={action.fills ? action.fills[0] : 'white'}
                    ></Path>
                </Svg>
            };
        case 'poison':
            return {
                cardImage: require('../assets/cards/poison_counter.png'),
                //tablet, width 900
                Svg: <Svg viewBox="-50 0 1050 1050">
                    <Path d="m598 529c0.6-57.8-17.7-116.1-53.7-161.4-17.4-19.1-31.7-40.9-50.1-59-40.6-40.3-101.4-43-150.3-68.3-2.9-25.5-12.2-51-6.5-76.7 1.7-8.6 4.3-17.2-0.3-25.4-12.8-29.5-1.8-61.6-4.1-92.4-1.7-16.1-0.6-35.8-16-45.7-3.6 33.5-15.9 64.7-25.9 96.4-4.6 24.8-4.6 50.6-15.3 73.9 6.8 23.7-6.6 43.6-21.1 61.1-32.1 16.4-70.2 20.3-98.2 44.4-19.9 16.9-41.4 31.7-63.7 45.5-16.7 20.9-35.2 41.1-42.7 67.5-29.9 36.1-33.4 84.5-50.3 126.7-0.3 62.7 12.4 130.2 52.4 180.5 28.7 23.7 48.7 55.5 77.3 79.1 27.5 16.4 56.8 29.9 85.2 44.6 18.5 4.3 37.6 6.4 56 11.5 14.9 76.9 25.1 155.6 55.1 228.5 9.9-29.9 8.7-62 17.3-92.3 12.1-44.7-12.7-91.2 1.3-135.2 21-18.7 55.9-6.6 79.2-22.6 44.3-27.3 91.1-53.8 123.2-95.6 11.9-24 37.1-41.9 37.1-70.7 0.2-38.7 22.8-75 14.2-114.2m-328.4 237.2c-32.1-7.8-61.9-23.1-88.8-41.9-28.9-19.3-39.7-55.2-68.3-75-26.7-31.9-21-75.5-31.9-113.3 4.4-26.4 9.6-52.5 12.3-79.2 13-21.1 33.2-38 38.7-63.5 19.1-27.4 48.2-46.3 71.6-70.1 17-19.6 44.1-11.3 66.4-12.1-2.2 21.6-4 44 1.4 65.3 2.6 13.1 8.6 26 6.5 39.7-4.5 29.2 6.5 58.5-1.3 87.3-15.6 60.3 1.4 121.2 2.9 182-2.2 26.9-3.5 54-9.6 80.6m243.1-114.3c-21.2 15.1-39.3 33.6-57.8 51.7-32.2 22.3-64.1 45.8-102.4 57 3.4-27.3 6.8-55.5-1.9-82.2-21.4-60.5 4.8-123.8 9.2-184.9-3.9-36.4-0.2-75.2-16.9-108.7-2.2-25.1 8.7-49.5 16.1-73.1 25.3 10.1 49.2 23.8 70.2 41.3 25.5 19.1 64.5 31.4 70.2 67 2.9 23.4 28.5 37.5 27.7 61.4-1.6 56.8 6.3 116.3-14.4 170.5"
                    fill={action.fills ? action.fills[0] : 'white'}
                    ></Path>
                </Svg>
            };
        case "neutral":
            return {
                Svg: <Svg viewBox="0 0 58 58">
                    <Path d="M18,29c0-7.805,4.48-14.547,11-17.843C26.292,9.788,23.241,9,20,9C8.954,9,0,17.954,0,29  c0,11.046,8.954,20,20,20c3.241,0,6.292-0.788,9-2.157C22.48,43.547,18,36.804,18,29z"
                    fill={'#BDC3C7'}
                    ></Path>
                </Svg>
            };
        case "day":
            return {
                Svg: <Svg viewBox="5 5 138 138">
                    <Circle cx={84.246} cy={84.246} r={34.16} fill={"#F6921E"}></Circle>
                    <Path d="M85.549,133.599c21.294,7.977,40.501,2.371,40.501,2.371c-15.268-0.273-21.38-3.084-23.699-5.791     c22.74,0.212,38.873-11.626,38.873-11.626c-14.443,4.965-21.149,4.415-24.257,2.662c21.444-7.577,32.554-24.216,32.554-24.216     c-11.874,9.603-18.363,11.378-21.882,10.796c17.559-14.457,22.305-33.891,22.305-33.891     c-7.874,13.084-13.361,16.976-16.868,17.627c11.556-19.585,9.369-39.474,9.369-39.474c-2.922,14.99-6.752,20.522-9.822,22.335     c4.16-22.36-4.696-40.3-4.696-40.3c2.379,15.085,0.675,21.593-1.59,24.35c-3.74-22.434-18.197-36.264-18.197-36.264     c7.394,13.363,8.019,20.06,6.834,23.423c-11.188-19.8-29.506-27.854-29.506-27.854c11.522,10.027,14.4,16.108,14.436,19.673     C82.617,22.645,62.651,21.341,62.651,21.341c14.256,5.484,19.039,10.213,20.292,13.55c-21.296-7.974-40.503-2.369-40.503-2.369     c15.268,0.273,21.382,3.084,23.701,5.791C43.402,38.102,27.27,49.939,27.27,49.939c14.447-4.962,21.149-4.415,24.255-2.662     c-21.443,7.578-32.553,24.218-32.553,24.218c11.876-9.606,18.365-11.383,21.882-10.798     C23.295,75.151,18.547,94.588,18.547,94.588c7.875-13.087,13.363-16.976,16.869-17.63c-11.556,19.591-9.369,39.477-9.369,39.477     c2.922-14.991,6.752-20.521,9.822-22.336c-4.16,22.358,4.697,40.3,4.697,40.3c-2.38-15.087-0.676-21.593,1.59-24.349     c3.74,22.434,18.197,36.264,18.197,36.264c-7.397-13.362-8.02-20.061-6.834-23.424c11.187,19.801,29.503,27.853,29.503,27.853     c-11.521-10.025-14.397-16.107-14.435-19.675c17.286,14.78,37.249,16.082,37.249,16.082     C91.583,141.667,86.8,136.938,85.549,133.599z M67.34,114.029c-4.049-2.458-7.192-5.44-9.169-7.581     c-2.96-3.691-4.895-7.566-6.021-10.255c-1.519-4.483-2.012-8.787-2.149-11.696c0.104-4.734,1.112-8.948,1.978-11.732     c1.72-4.411,4.11-8.024,5.877-10.342c3.121-3.56,6.603-6.138,9.053-7.712c4.153-2.275,8.306-3.507,11.148-4.147     c4.678-0.718,9-0.455,11.89-0.086c4.644,0.925,8.615,2.65,11.207,3.988c4.044,2.453,7.183,5.432,9.162,7.57     c2.965,3.695,4.9,7.575,6.026,10.267c1.519,4.48,2.011,8.785,2.149,11.693c-0.105,4.734-1.114,8.945-1.979,11.728     c-1.716,4.412-4.104,8.023-5.87,10.342c-3.125,3.562-6.606,6.14-9.059,7.717c-4.151,2.273-8.304,3.507-11.147,4.147     c-4.68,0.718-9.001,0.454-11.893,0.085C73.901,117.09,69.93,115.364,67.34,114.029z"
                    fill={"#f5d142"}
                    ></Path>
                </Svg>
            };
        case "night":
            return {
                Svg: <Svg viewBox="0 0 506 506">
                    <Path d="M248.082,0.003C111.07,0.003,0,111.063,0,248.085c0,137.001,111.07,248.07,248.082,248.07  c137.006,0,248.076-111.069,248.076-248.07C496.158,111.062,385.088,0.003,248.082,0.003z"
                    fill={"#334D5C"}
                    ></Path>
                    <Path d="M322.377,80.781c10.1,22.706,15.721,47.844,15.721,74.298c0,101.079-81.94,183.019-183.019,183.019  c-26.454,0-51.591-5.622-74.298-15.721c28.49,64.053,92.674,108.721,167.298,108.721c101.078,0,183.019-81.94,183.019-183.019  C431.098,173.454,386.43,109.27,322.377,80.781z"
                    fill={"#F2C900"}
                    ></Path>
                    <Polygon points={"209.824,194.758 214.465,177.15 199.799,187.941 183.881,178.107 190.219,195.371   175.339,207.49 194.323,206.778 200.644,224.693 206.441,206.399 224.826,205.941 "}
                    fill={"#F2C900"}
                    ></Polygon>
                    <Polygon points={"101.521,229.699 82.134,229.015 76.043,211.187 69.952,229.015 50.564,229.699 66.187,240.6   60.296,259.651 76.043,247.761 91.789,259.651 85.898,240.6 "}
                    fill={"#F2C900"}
                    ></Polygon>
                    <Polygon points={"278.639,68.596 255.368,67.775 248.058,46.377 240.747,67.775 217.476,68.596   236.228,81.682 229.156,104.548 248.058,90.276 266.958,104.548 259.887,81.682 "}
                    fill={"#F2C900"}
                    ></Polygon>
                </Svg>
            };
        case "dayCard":
            return {
                cardImage: require('../assets/cards/day.jpg')
            };
        case "nightCard":
            return {
                cardImage: require('../assets/cards/night.png')
            }
        default: return state
    }
}

